#포트 설정
server:
  port: 8002

spring:
  application:
    name: auth-service

  security:
    oauth2:
      client:
        registration:
          google:
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email

  kafka:
     producer:
       key-serializer: org.apache.kafka.common.serialization.StringSerializer
       value-serializer: org.apache.kafka.common.serialization.StringSerializer


# local 프로필
---

spring:
  config:
    import: file:.env[.properties]
    activate:
      on-profile: local

  cloud:
    kubernetes:
      enabled: false

  redis:
    host: "${REDIS_HOST}"
    port: "${REDIS_PORT}"
    password: "${REDIS_PASSWORD}"

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_OAUTH_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH_CLIENT_SECRET}

  kafka:
    bootstrap-servers: "${BROKER_URL}"

#유레카 클라이언트 등록
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: "${EUREKA_URL}"


#JWT 설정
jwt:
  secretKey: "${JWT_SECRET_KEY}"
  access:
    expiration: "${JWT_ACCESS_TOKEN_EXP}"
  refresh:
    expiration: "${JWT_REFRESH_TOKEN_EXP}"


#COOL SMS API
coolsms:
  api:
    key: "${COOLSMS_API_KEY}"
    secret: "${COOLSMS_API_SECRET}"
    number: "${COOLSMS_NUMBER}"
    url: "${COOLSMS_API_URL}"


# develop 프로필
---

spring:
  config:
    activate:
      on-profile: develop

  redis:
    host: "${REDIS_HOST}"
    port: "${REDIS_PORT}"
    password: "${REDIS_PASSWORD}"


  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}

  kafka:
    bootstrap-servers: "${KAFKA_BROKER_SERVER}"

eureka:
  client:
    enabled: false


jwt:
  secretKey: "${JWT_SECRETKEY}"
  access:
    expiration: "${JWT_ACCESSTOKEN_EXP}"
  refresh:
    expiration: "${JWT_REFRESHTOKEN_EXP}"

coolsms:
  api:
    key: "${SMS_KEY}"
    secret: "${SMS_SECRET}"
    number: "${SMS_NUMBER}"
    url: "${SMS_URL}"